@model Newapp.Models.DashBoard2Model

@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <h1 class="display-4 text-center mb-4">CRM Dashboard</h1>
    <p class="text-center mb-5">Visualize the status of clients, tickets, leads, and budgets in one place.</p>

    <!-- Summary Cards -->
    <div class="row text-center mb-5">
        <div class="col-md-4">
            <div class="card text-white bg-primary mb-3">
                <div class="card-body">
                    <h4>Total Expense</h4>
                    <h3 id="expenseCount">@Model.TotalExpenses</h3> <!-- Dynamically populated total expenses -->
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-danger mb-3">
                <div class="card-body">
                    <h4>Total Budget</h4>
                    <h3 id="budgetCount"> @Model.TotalBudget </h3> <!-- Dynamically populated total budget -->
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-info mb-3">
                <div class="card-body">
                    <h4>Total Clients</h4>
                    <h3 id="clientCount">@Model.TicketCount </h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Leads and Tickets Count</h3>
                <canvas id="barChart" class="chart-size"></canvas>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Average Expense</h3>
                <canvas id="averageExpenseChart" class="chart-size"></canvas>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Budget Evolution</h3>
                <canvas id="budgetEvolutionChart" class="chart-size"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Prepare data for Average Expense chart (Line Chart)
        const averageExpenseData = {
            labels: @Html.Raw(Json.Serialize(Model.AverageExpenseLabels)),
            datasets: [{
                label: 'Average Expense ($)',
                data: @Html.Raw(Json.Serialize(Model.AverageExpenseValues)),
                fill: false,
                borderColor: '#1e40af',
                tension: 0.1
            }]
        };

        // Prepare data for Budget Evolution chart (Line Chart)
        const budgetEvolutionData = {
            labels: @Html.Raw(Json.Serialize(Model.CumulativeBudgetsLabels)),
            datasets: [{
                label: 'Budget ($)',
                data: @Html.Raw(Json.Serialize(Model.CumulativeBudgetsValues)),
                fill: false,
                borderColor: '#1e3a8a',
                tension: 0.1
            }]
        };

        // Leads and Tickets Data (Bar Chart)
        const barData = {
            labels: ['Leads', 'Tickets'],
            datasets: [{
                label: 'Count',
                data: [@Model.LeadCount, @Model.TicketCount],  // Dynamically populate lead and ticket count from the model
                backgroundColor: ['#1e40af', '#e0f2fe']
            }]
        };

        // Render the Average Expense Chart
        new Chart(document.getElementById('averageExpenseChart'), {
            type: 'line',
            data: averageExpenseData
        });

        // // Render the Budget Evolution Chart
        new Chart(document.getElementById('budgetEvolutionChart'), {
            type: 'line',
            data: budgetEvolutionData
        });

        // Render the Leads and Tickets Count Bar Chart
        new Chart(document.getElementById('barChart'), {
            type: 'bar',
            data: barData
        });
    </script>
}
