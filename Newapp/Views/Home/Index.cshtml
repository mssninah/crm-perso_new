@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <h1 class="display-4 text-center mb-4">CRM Dashboard</h1>
    <p class="text-center mb-5">Visualize the status of clients, tickets, leads, and budgets in one place.</p>

    <!-- Summary Cards -->
    <div class="row text-center mb-5">
        <div class="col-md-4">
            <div class="card text-white bg-primary mb-3">
                <div class="card-body">
                    <h4>Total Expense</h4>
                    <h3 id="expenseCount">$10,000</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-danger mb-3">
                <div class="card-body">
                    <h4>Total Budget</h4>
                    <h3 id="budgetCount">$50,000</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-info mb-3">
                <div class="card-body">
                    <h4>Total Clients</h4>
                    <h3 id="clientCount">@ViewBag.CustomerCount</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="row">
        <div class="col-md-12 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Leads and Tickets Count</h3>
                <canvas id="barChart" class="chart-size"></canvas>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Ticket Status</h3>
                <canvas id="ticketStatusChart" class="chart-size"></canvas>
            </div>
        </div>
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm p-3">
                <h3 class="text-center">Lead Status</h3>
                <canvas id="leadStatusChart" class="chart-size"></canvas>
            </div>
        </div>

        <div class="col-md-6 mb-4">
        <div class="card shadow-sm p-3">
            <h3 class="text-center">Average Expense</h3>
            <canvas id="averageExpenseChart" class="chart-size"></canvas>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card shadow-sm p-3">
                    <h3 class="text-center">Budget Evolution</h3>
                    <canvas id="budgetEvolutionChart" class="chart-size"></canvas>
                </div>
        </div>



    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Average Expense Data (Line Chart)
        const averageExpenseData = {
            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],
            datasets: [{
                label: 'Average Expense ($)',
                data: [150, 200, 180, 220, 170, 190, 210],
                fill: false,
                borderColor: '#1e40af',
                tension: 0.1
            }]
        };

        // Budget Evolution Data (Line Chart)
        const budgetEvolutionData = {
            labels: ['Client A', 'Client B', 'Client C', 'Client D', 'Client E'],
            datasets: [{
                label: 'Budget ($)',
                data: [5000, 7000, 8000, 6500, 9000],
                fill: false,
                borderColor: '#1e3a8a',
                tension: 0.1
            }]
        };

        // Ticket Status Data (Doughnut Chart)
        const ticketStatusData = {
            labels: ['Open', 'In Progress', 'Closed'],
            datasets: [{
                data: [20, 30, 50],
                backgroundColor: ['#1e40af', '#e0f2fe', '#1e3a8a']
            }]
        };

        // Lead Status Data (Doughnut Chart)
        const leadStatusData = {
            labels: ['New', 'Contacted', 'Converted'],
            datasets: [{
                data: [25, 40, 35],
                backgroundColor: ['#1e3a8a', '#1e40af', '#e0f2fe']
            }]
        };

        // Leads and Tickets Data (Bar Chart)
        const barData = {
            labels: ['Leads', 'Tickets'],
            datasets: [{
                label: 'Count',
                data: [@ViewBag.LeadCount, @ViewBag.TicketCount],
                backgroundColor: ['#1e40af', '#e0f2fe']
            }]
        };

        // Render Charts
        new Chart(document.getElementById('barChart'), { type: 'bar', data: barData });
        new Chart(document.getElementById('ticketStatusChart'), { type: 'doughnut', data: ticketStatusData });
        new Chart(document.getElementById('leadStatusChart'), { type: 'doughnut', data: leadStatusData });
        // Average Expense Chart
        new Chart(document.getElementById('averageExpenseChart'), {
            type: 'line',
            data: averageExpenseData
        });

        // Budget Evolution Chart
        new Chart(document.getElementById('budgetEvolutionChart'), {
            type: 'line',
            data: budgetEvolutionData
        });

    </script>
}
